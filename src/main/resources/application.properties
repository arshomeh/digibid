# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# Connection url for the database "netgloo_blog"
spring.datasource.url=jdbc:mysql://localhost:3306/digibid?useSSL=false
# Username and password
spring.datasource.username=root
spring.datasource.password=
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.search.lucene_version=LUCENE_CURRENT
# Specify the DirectoryProvider to use (the Lucene Directory)
spring.jpa.properties.hibernate.search.default.directory_provider = filesystem
# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
spring.jpa.properties.hibernate.search.default.indexBase = ./lucene/indexes/

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# use create to execute import.sql script
spring.jpa.hibernate.ddl-auto=update

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.javax.persistence.sharedCache.mode=ALL

# suppress inspection "UnusedProperty" for whole file
server.port=8443
server.ssl.key-store=classpath:ssl/keystore.p12
server.ssl.key-store-password=secret
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias=digibid
server.error.whitelabel.enabled = false

logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.gr.uoa.di.digibid=DEBUG

spring.freemarker.template-loader-path=classpath:/WEB-INF/ftl
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-spring-macro-helpers=true

# Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#
# Solves the LazyInitialization when trying to access an hibernate-managed entity outside of the lifecycle of the Session,
# i.e. in the web view of Spring MVC. In my case, this was a List<> @OneToMany association, which are lazily loaded by default.
spring.jpa.open-in-view=true

# Set the file size limit (default 1Mb). If you want to specify that files be
# unlimited set the multipart.maxFileSize property to -1.
spring.http.multipart.max-file-size=5MB
# Set the total request size for a multipart/form-data (default 10Mb)
spring.http.multipart.max-request-size=10MB
